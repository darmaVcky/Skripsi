## Default settings for the simulation### Scenario settingsScenario.name = known+poprwp#Scenario.name = Uji_External_Trace3(filter+queue)Scenario.simulateConnections = falseScenario.updateInterval = 0.1# 43200s == 12hScenario.endTime = 274883## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250kbtInterface.transmitRange = 10# High speed, long range, interface for group 4highspeedInterface.type = SimpleBroadcastInterfacehighspeedInterface.transmitSpeed = 10MhighspeedInterface.transmitRange = 1000# Define 6 different node groupsScenario.nrofHostGroups = 1## Group-specific settings:# groupID : Group's identifier. Used as the prefix of host names# nrofHosts: number of hosts in the group# movementModel: movement model of the hosts (valid class name from movement package)# waitTime: minimum and maximum wait times (seconds) after reaching destination# speed: minimum and maximum speeds (m/s) when moving on a path# bufferSize: size of the message buffer (bytes)# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groups#Group.movementModel = StationaryMovementGroup.movementModel = RandomWaypoint#Group.router = EpidemicRouterGroup.router = DecisionEngineRouterDecisionEngineRouter.decisionEngine = PubSub#Group.nodeList = [nella:88,89,194,196,197,199,114,1,50,53,54,11,56,14,15,162,164,0,121,166,123,3,126,129,8,60,62,66,23,67,27,175,177,135,137,74,77,35,79,37,38,183,184,140,185,101,147,107,80,40,41/luna:45,49,193,150,0,112,158,115,117,92,93,51,95,96,52,98,99,13,59,16,19,160,161,168,6,7,128,9,21,24,69,25,171,173,174,132,179,136,138,139,71,30,33,141,103,106,81,109,86,42,87/via:48,195,198,154,155,156,157,116,90,118,91,119,10,58,11,167,124,4,5,127,20,64,65,22,26,28,172,130,131,178,134,73,31,75,76,34,39,181,182,142,187,188,100,102,146,148,105,85,43/maya:44,46,47,190,191,192,151,152,153,110,111,113,159,94,97,55,12,57,17,18,163,120,165,122,2,169,125,61,63,68,170,176,133,70,72,32,78,36,180,186,143,144,145,189,104,149,108,82,83,84]Group.nodeStatus = [publiser:1,5,29,37,39/subscriber:6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]DecisionEngineRouter.Int = 4Group.bufferSize = 25MGroup.waitTime = 0, 120# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 0.5, 1.5# Message TTL of 300 minutes (5 hours)Group.msgTtl = 360#Group.msgTtl = 11520#Group.msgTtl = 12960#Group.msgTtl = 14400Group.nodeLocation = 0, 1#Group.initialEnergy = 10000#Group.scanEnergy = 0.05#Group.transmitEnergy = 2#Group.scanResponseEnergy = 0.05Group.nrofHosts = 41Group.sendQueue = 6# group1 (pedestrians) specific settingsGroup1.groupID = p## Message creation parameters # How many event generatorsEvents.nrof = 3Events1.class = ExternalEventsQueueEvents1.filePath = RealityConnectionTraceFinal.txt# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35# Message sizes (500kB - 1MB)Events1.size = 500k,1M# range of message source/destination addressesEvents1.hosts = 0,40# Message ID prefixEvents1.prefix = MEvents2.class = StandardEventsReaderEvents2.filePath = ContohFile2.txtEvents3.class = StandardEventsReaderEvents3.filePath = ContohFileSubsRandomWay1.txt## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 2# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 150, 150# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Map based movement -movement model specific settingsMapBasedMovement.nrofMapFiles = 4MapBasedMovement.mapFile1 = data/roads.wktMapBasedMovement.mapFile2 = data/main_roads.wktMapBasedMovement.mapFile3 = data/pedestrian_paths.wktMapBasedMovement.mapFile4 = data/shops.wkt## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 3# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)#Report.reportDir = reports/energy/Report.reportDir = reports/known3/rwpLate3/known+poprwp1# Report classes to load#Report.report1 = BufferOccupancyReportReport.report1 = latencyReport3   Report.report2 = residuMessageReport.report3 = totalReplicate#Report.report1 = totalKontak#Report.report3 = interestReport#Report.report5 = energyPerTime## Default settings for some routers settingsProphetRouter.secondsInTimeUnit = 30SprayAndWaitRouter.nrofCopies = 20SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$